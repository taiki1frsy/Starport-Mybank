syntax = "proto3";
package taikifuru.mybank.mybank;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "mybank/params.proto";
import "mybank/my_balance.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/taiki-furu/mybank/x/mybank/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/taikifuru/mybank/mybank/params";
  }
  // Queries a list of MyBalances items.
	rpc MyBalances(QueryMyBalancesRequest) returns (QueryMyBalancesResponse) {
		option (google.api.http).get = "/taiki-furu/mybank/mybank/my_balances";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryMyBalancesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryMyBalancesResponse {
   // Returning a list of balances
   repeated MyBalance MyBalance = 1;
   // Adding pagination to response
   cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
